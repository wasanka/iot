<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">200</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">5000</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request">
          <stringProp name="HTTPSampler.domain">192.168.1.166</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">message?queue=test_queue&amp;clientId=${__threadNum}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;Users&gt;&#xd;
    &lt;User&gt;&#xd;
        &lt;ID&gt;1&lt;/ID&gt;&#xd;
        &lt;Name&gt;John Doe&lt;/Name&gt;&#xd;
        &lt;Email&gt;john.doe@example.com&lt;/Email&gt;&#xd;
        &lt;Address&gt;&#xd;
            &lt;Street&gt;123 Main St&lt;/Street&gt;&#xd;
            &lt;City&gt;Anytown&lt;/City&gt;&#xd;
            &lt;State&gt;CA&lt;/State&gt;&#xd;
            &lt;Zip&gt;12345&lt;/Zip&gt;&#xd;
        &lt;/Address&gt;&#xd;
        &lt;Phone&gt;+1-800-555-1234&lt;/Phone&gt;&#xd;
        &lt;Membership&gt;Gold&lt;/Membership&gt;&#xd;
    &lt;/User&gt;&#xd;
    &lt;User&gt;&#xd;
        &lt;ID&gt;2&lt;/ID&gt;&#xd;
        &lt;Name&gt;Jane Smith&lt;/Name&gt;&#xd;
        &lt;Email&gt;jane.smith@example.com&lt;/Email&gt;&#xd;
        &lt;Address&gt;&#xd;
            &lt;Street&gt;456 Elm St&lt;/Street&gt;&#xd;
            &lt;City&gt;Othertown&lt;/City&gt;&#xd;
            &lt;State&gt;TX&lt;/State&gt;&#xd;
            &lt;Zip&gt;67890&lt;/Zip&gt;&#xd;
        &lt;/Address&gt;&#xd;
        &lt;Phone&gt;+1-800-555-5678&lt;/Phone&gt;&#xd;
        &lt;Membership&gt;Silver&lt;/Membership&gt;&#xd;
    &lt;/User&gt;&#xd;
    &lt;User&gt;&#xd;
        &lt;ID&gt;3&lt;/ID&gt;&#xd;
        &lt;Name&gt;Robert Johnson&lt;/Name&gt;&#xd;
        &lt;Email&gt;robert.johnson@example.com&lt;/Email&gt;&#xd;
        &lt;Address&gt;&#xd;
            &lt;Street&gt;789 Maple St&lt;/Street&gt;&#xd;
            &lt;City&gt;Anycity&lt;/City&gt;&#xd;
            &lt;State&gt;NY&lt;/State&gt;&#xd;
            &lt;Zip&gt;10111&lt;/Zip&gt;&#xd;
        &lt;/Address&gt;&#xd;
        &lt;Phone&gt;+1-800-555-9012&lt;/Phone&gt;&#xd;
        &lt;Membership&gt;Platinum&lt;/Membership&gt;&#xd;
    &lt;/User&gt;&#xd;
    &lt;User&gt;&#xd;
        &lt;ID&gt;4&lt;/ID&gt;&#xd;
        &lt;Name&gt;Emily Davis&lt;/Name&gt;&#xd;
        &lt;Email&gt;emily.davis@example.com&lt;/Email&gt;&#xd;
        &lt;Address&gt;&#xd;
            &lt;Street&gt;321 Oak St&lt;/Street&gt;&#xd;
            &lt;City&gt;Sometown&lt;/City&gt;&#xd;
            &lt;State&gt;FL&lt;/State&gt;&#xd;
            &lt;Zip&gt;54321&lt;/Zip&gt;&#xd;
        &lt;/Address&gt;&#xd;
        &lt;Phone&gt;+1-800-555-3456&lt;/Phone&gt;&#xd;
        &lt;Membership&gt;Gold&lt;/Membership&gt;&#xd;
    &lt;/User&gt;&#xd;
    &lt;User&gt;&#xd;
        &lt;ID&gt;5&lt;/ID&gt;&#xd;
        &lt;Name&gt;Michael Brown&lt;/Name&gt;&#xd;
        &lt;Email&gt;michael.brown@example.com&lt;/Email&gt;&#xd;
        &lt;Address&gt;&#xd;
            &lt;Street&gt;654 Pine St&lt;/Street&gt;&#xd;
            &lt;City&gt;Thistown&lt;/City&gt;&#xd;
            &lt;State&gt;WA&lt;/State&gt;&#xd;
            &lt;Zip&gt;56789&lt;/Zip&gt;&#xd;
        &lt;/Address&gt;&#xd;
        &lt;Phone&gt;+1-800-555-7890&lt;/Phone&gt;&#xd;
        &lt;Membership&gt;Bronze&lt;/Membership&gt;&#xd;
    &lt;/User&gt;&#xd;
&lt;/Users&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <intProp name="ThreadGroup.num_threads">200</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">700</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">message?queue=test_queue&amp;clientId=${__threadNum}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
          <stringProp name="RegexExtractor.useHeaders">true</stringProp>
          <stringProp name="RegexExtractor.refname">messageId</stringProp>
          <stringProp name="RegexExtractor.regex">Messageid: (.*)</stringProp>
          <stringProp name="RegexExtractor.template">$1$</stringProp>
          <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
          <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          <stringProp name="RegexExtractor.match_number">1</stringProp>
          <stringProp name="Sample.scope">all</stringProp>
        </RegexExtractor>
        <hashTree/>
        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
          <stringProp name="RegexExtractor.useHeaders">code</stringProp>
          <stringProp name="RegexExtractor.refname">responseCode</stringProp>
          <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
          <stringProp name="RegexExtractor.template">$1$</stringProp>
          <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
          <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          <stringProp name="RegexExtractor.match_number">1</stringProp>
          <stringProp name="Sample.scope">all</stringProp>
        </RegexExtractor>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">${responseCode}==200</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">message?queue=test_queue&amp;clientId=${__threadNum}&amp;messageId=${messageId}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
